import pygame
from constants import *
import public_vars
from objects import *
import time
from ghost_algorithms import *

def generate_walls():
    walls = []
    # Wall(x, y, orientation, thickness, length)
    # Horizontal Walls
    # WALL_LATITUDE_1
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_1, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_1))
    # WALL_LATITUDE_2
    walls.append(Wall(WALL_LONGITUDE_1+THIN_WALL_THICKNESS+LANE_SIZE, WALL_LATITUDE_2, Orientation.HORIZONTAL, THICK_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_2, Orientation.HORIZONTAL, THICK_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_6-THIN_WALL_THICKNESS, WALL_LATITUDE_2, Orientation.HORIZONTAL, THICK_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_2, Orientation.HORIZONTAL, THICK_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    # WALL_LATITUDE_3
    walls.append(Wall(WALL_LONGITUDE_1+THIN_WALL_THICKNESS+LANE_SIZE, WALL_LATITUDE_3, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_3, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_3, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    # WALL_LATITUDE_4
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_4, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_4, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_6-THIN_WALL_THICKNESS, WALL_LATITUDE_4, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_4, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    # WALL_LATITUDE_5
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_5_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_5_INSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4//3))

    walls.append(Wall(WALL_LONGITUDE_4 + 2*WALL_HORIZONTAL_LENGTH_4//3, WALL_LATITUDE_5_INSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4//3))    
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_5_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    # WALL_LATITUDE_6
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_6_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_6_INSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))    
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_6_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    # WALL_LATITUDE_7
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_7_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_7_INSIDE, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))    
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_7_OUTSIDE, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_5))
    # WALL_LATITUDE_8
    walls.append(Wall(WALL_LONGITUDE_1+THIN_WALL_THICKNESS+LANE_SIZE, WALL_LATITUDE_8, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_8, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_6-THIN_WALL_THICKNESS, WALL_LATITUDE_8, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_8, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_2))
    # WALL_LATITUDE_9
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_9, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_6))
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_9, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))
    walls.append(Wall(WALL_LONGITUDE_9-LANE_SIZE, WALL_LATITUDE_9, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_6))   
    # WALL_LATITUDE_10
    walls.append(Wall(WALL_LONGITUDE_1+THIN_WALL_THICKNESS+LANE_SIZE, WALL_LATITUDE_10, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_7))
    walls.append(Wall(WALL_LONGITUDE_6-THIN_WALL_THICKNESS, WALL_LATITUDE_10, Orientation.HORIZONTAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_7))
    # WALL_LATITUDE_11
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_11, Orientation.HORIZONTAL, THIN_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_1))

    # Add vertical walls
    # WALL_LONGITUDE_1
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_1, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_1))
    walls.append(Wall(WALL_LONGITUDE_1, WALL_LATITUDE_7_OUTSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_2))
    # WALL_LONGITUDE_2
    walls.append(Wall(WALL_LONGITUDE_2_INNER, WALL_LATITUDE_4, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_2_INNER, WALL_LATITUDE_6_OUTSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_2_OUTER, WALL_LATITUDE_8, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_VERTICAL_LENGTH_4))
    # WALL_LONGITUDE_3
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_3, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_6_OUTSIDE, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_3, WALL_LATITUDE_9, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    # WALL_LONGITUDE_4
    walls.append(Wall(WALL_LONGITUDE_4, WALL_LATITUDE_5_INSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_LATITUDE_6_INSIDE+THIN_WALL_THICKNESS-WALL_LATITUDE_5_INSIDE))
    # WALL_LONGITUDE_5
    walls.append(Wall(WALL_LONGITUDE_5, WALL_LATITUDE_1, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_5, WALL_LATITUDE_3, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_5, WALL_LATITUDE_7_INSIDE, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_5, WALL_LATITUDE_9, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    # WALL_LONGITUDE_6
    walls.append(Wall(WALL_LONGITUDE_6, WALL_LATITUDE_5_INSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_LATITUDE_6_INSIDE+THIN_WALL_THICKNESS-WALL_LATITUDE_5_INSIDE))
    # WALL_LONGITUDE_7
    walls.append(Wall(WALL_LONGITUDE_7, WALL_LATITUDE_3, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_4))
    walls.append(Wall(WALL_LONGITUDE_7, WALL_LATITUDE_6_OUTSIDE, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_7, WALL_LATITUDE_9, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_HORIZONTAL_LENGTH_3))
    # WALL_LONGITUDE_8
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_4, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_6_OUTSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_3))
    walls.append(Wall(WALL_LONGITUDE_8, WALL_LATITUDE_8, Orientation.VERTICAL, MEDIUM_WALL_THICKNESS, WALL_VERTICAL_LENGTH_4))
    # WALL_LONGITUDE_9
    walls.append(Wall(WALL_LONGITUDE_9, WALL_LATITUDE_1, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_1))
    walls.append(Wall(WALL_LONGITUDE_9, WALL_LATITUDE_7_OUTSIDE, Orientation.VERTICAL, THIN_WALL_THICKNESS, WALL_VERTICAL_LENGTH_2))
    return walls

def add_point(points, x, y):
    point = Point(x, y)
    overlapping = False
    for wall in public_vars.walls:
        if point.overlapping(wall):
            overlapping = True
            break
    if not overlapping:
        points.append(point)

def generate_points():
    points = []
    for y in range(LANE_HORIZONTAL_1_LATTITUDE, LANE_HORIZONTAL_10_LATTITUDE+1, LANE_SIZE//2):
        if y > LANE_HORIZONTAL_3_LATTITUDE and y < LANE_HORIZONTAL_7_LATTITUDE:
            continue
        for x in range(LANE_VERTICAL_1_LONGITUDE, LANE_VERTICAL_10_LONGITUDE+1, LANE_SIZE//2):
            add_point(points, x, y)
    for y in range(LANE_HORIZONTAL_3_LATTITUDE+LANE_SIZE//2, LANE_HORIZONTAL_7_LATTITUDE-1, LANE_SIZE//2):
        add_point(points, LANE_VERTICAL_3_LONGITUDE, y)
        add_point(points, LANE_VERTICAL_8_LONGITUDE, y)
    return points

def initialize_game_data():
    # Pacman
    public_vars.pacman = Pacman(constants.SCREEN_WIDTH/2-constants.CHARACTER_SIZE/2, constants.WALL_LATITUDE_8+constants.MEDIUM_WALL_THICKNESS, constants.Direction.LEFT)
    public_vars.red_ghost = Ghost("red", constants.SCREEN_WIDTH/2-constants.CHARACTER_SIZE/2, constants.SCREEN_HEIGHT/2-constants.CHARACTER_SIZE/2-constants.CHARACTER_SIZE, constants.Direction.UP, "resources/red.png", destination_red)
    public_vars.green_ghost = Ghost("green", constants.SCREEN_WIDTH/2+constants.CHARACTER_SIZE/2, constants.SCREEN_HEIGHT/2-constants.CHARACTER_SIZE/2, constants.Direction.LEFT, "resources/green.png", destination_green)
    public_vars.pink_ghost = Ghost("pink", constants.SCREEN_WIDTH/2-constants.CHARACTER_SIZE/2-constants.CHARACTER_SIZE, constants.SCREEN_HEIGHT/2-constants.CHARACTER_SIZE/2, constants.Direction.LEFT, "resources/pink.png", destination_pink)
    public_vars.orange_ghost = Ghost("orange", constants.SCREEN_WIDTH/2-constants.CHARACTER_SIZE/2, constants.SCREEN_HEIGHT/2-constants.CHARACTER_SIZE/2, constants.Direction.UP, "resources/orange.png", destination_orange)
    public_vars.ghosts = [public_vars.red_ghost, public_vars.green_ghost, public_vars.pink_ghost, public_vars.orange_ghost]

    # Walls
    public_vars.walls = generate_walls()

    # Points
    public_vars.points = generate_points()

    # Score 
    public_vars.score = 0

    # Start time
    public_vars.start_time = time.time()